/************************************

	badges

************************************/


/************************************
	DEFAULT badge CONFIG

	Use this to create your base text atom(s).
	You may overwrite/extend and, all, or none of the CSS properties using the $text map.

************************************/

// Default text styles
// @extend %text
$badge: (
	font-family: font-family(text),
	font-size: font-size(base),
	color: color(gray, extra-dark),
);@include badge($badge);

/************************************
	EO DEFAULT badges CONFIG
************************************/


/************************************

	badges MODIFIERS

	To create a new modifier, create a new badge map.
	The badge map must contain a 'name' key.
		> 'name' is used to create the placeholder class.

	Responsive Type:
	If you want to utilize structured, responsive type, use the 'size' key.

	To instntiate, @include the badge() mixin with the second argument as your new badge map.

	Example:

	$NEW-badge: (
		name: 'NEW-badge',
		css-property: value,
	);
	@include badge($heading, $NEW-badge);

************************************/

// badge variations
// @extend %<name>
