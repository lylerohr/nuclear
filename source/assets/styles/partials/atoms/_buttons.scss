@mixin button($conf: ()) {
	// Extending the default arguments with the given object
	$conf: extend((
		display: inline-block,
		margin-bottom: 0,
		font-weight: inherit,
		text-align: center,
		vertical-align: middle,
		touch-action: manipulation,
		cursor: pointer,
		background-image: none,
		border: 1px solid transparent,
		white-space: nowrap,
		type: standard,
		name: 'button'
	), $conf);
	
	// Dumping CSS
	.#{map-get($conf, name)} {
		
		$type: map-get($conf, type);
		@if $type == standard {
			background: #333;
			color: #FEFEFE;
		}
		@else if $type == text {
			background: transparent;
			border: none;
		}
	}
}

$ghost-button: (
	name: 'ghost-button',
	theme: standard,
	background: transparent,
	border: #{1px, solid, color(brand-primary)}
);

@include button($ghost-button);


/* bootstrap button model

%button {
  display: inline-block;
  margin-bottom: 0;
  font-weight: $btn-font-weight;
  text-align: center;
  vertical-align: middle;
  touch-action: manipulation;
  cursor: pointer;
  background-image: none;
  border: 1px solid transparent;
  white-space: nowrap;
  @include button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base);
  @include user-select(none);

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      @include tab-focus;
    }
  }

  &:hover,
  &:focus,
  &.focus {
    color: $btn-default-color;
    text-decoration: none;
  }

  &:active,
  &.active {
    outline: 0;
    background-image: none;
    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor: $cursor-disabled;
    @include opacity(.65);
    @include box-shadow(none);
  }
}





%text-button {
  color: $link-color;
  font-weight: normal;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] & {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &[disabled],
  fieldset[disabled] & {
    &:hover,
    &:focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}

*/